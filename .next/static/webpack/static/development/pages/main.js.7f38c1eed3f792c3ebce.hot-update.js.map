{"version":3,"file":"static/webpack/static\\development\\pages\\main.js.7f38c1eed3f792c3ebce.hot-update.js","sources":["webpack:///./pages/main.js"],"sourcesContent":["import theme from '../components/theme'\r\nimport React, { useState, useRef, useEffect, forwardRef } from 'react'\r\n// import ScrollCollision from 'react-scroll-collision';\r\n\r\nclass ScrollCollision extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.wrapperRef = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        allBlocks: null,\r\n        blockClass: null,\r\n        style: {\r\n            position: 'absolute',\r\n            top: '0',\r\n            left: '0',\r\n            right: '0',\r\n            bottom: '0'\r\n        },\r\n        originOuter: 0,\r\n        cloneOuter: 0,\r\n        base: 100,\r\n        element: {\r\n            top: 0,\r\n            bottom: 0,\r\n            height: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        const blocks = document.querySelectorAll('[data-clippath]');\r\n        this.updateElement();\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            allBlocks: blocks,\r\n            cloneOuter: this.state.base\r\n        });\r\n\r\n        window.addEventListener(\"scroll\", this.handleScroll);\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        this.updateElement();\r\n    }\r\n\r\n    handleScroll = (event) => {\r\n\r\n        this.testCollision();\r\n    }\r\n\r\n    testCollision = () => {\r\n        const { allBlocks, element, base } = { ...this.state };\r\n        for (let i = 0; i < allBlocks.length; i++) {\r\n            const block = this.getBlockInfos(allBlocks[i]);\r\n            let newOrigin = 0;\r\n            let newClone = 0;\r\n\r\n            if (element.bottom >= block.top && element.top <= block.top && this.isInBoundaries()) {\r\n                newOrigin = block.top - element.bottom;\r\n                newClone = block.top - element.top;\r\n                return this.updateOverlay(newOrigin, newClone, block.class);\r\n            }\r\n\r\n            if (element.bottom >= block.bottom && element.top <= block.bottom && this.isInBoundaries()) {\r\n                newOrigin = block.bottom - element.top;\r\n                newClone = block.bottom - element.bottom;\r\n                return this.updateOverlay(newOrigin, newClone, block.class);\r\n            }\r\n\r\n            if (element.top > block.top && element.bottom < block.bottom) return this.updateOverlay(-base, 0, block.class);\r\n        };\r\n\r\n        return this.updateOverlay(0, base, null);\r\n\r\n    }\r\n\r\n    updateElement = () => {\r\n        const newElem = this.getBlockInfos(this.wrapperRef.current);\r\n        if (this.state.element.top !== newElem.top || this.state.element.bottom !== newElem.bottom) {\r\n            const element = {\r\n                top: newElem.top,\r\n                bottom: newElem.bottom,\r\n                height: newElem.bottom - newElem.top\r\n            };\r\n            this.setState({\r\n                ...this.state,\r\n                element: element\r\n            });\r\n        }\r\n    }\r\n\r\n    updateOverlay = (origin, clone, blockClass) => {\r\n        const tempOrigin = this.getPercent(origin);\r\n        const tempClone = this.getPercent(clone);\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            blockClass: blockClass,\r\n            originOuter: tempOrigin,\r\n            cloneOuter: tempClone\r\n        });\r\n    }\r\n\r\n    isInBoundaries = () => {\r\n        const { originOuter, cloneOuter, base } = { ...this.state };\r\n        return originOuter <= base && originOuter >= - base && cloneOuter <= base && cloneOuter >= - base\r\n    }\r\n\r\n    getPercent = (value) => {\r\n        const { base } = { ...this.state };\r\n        let percent = (value * base) / this.state.element.height;\r\n        if (percent > base) percent = base;\r\n        else if (percent < - base) percent = - base;\r\n        return percent;\r\n    }\r\n\r\n    getBlockInfos = (elem) => {\r\n        const position = elem.getBoundingClientRect();\r\n        const blockClass = elem.dataset ? elem.dataset.clippath : null;\r\n        const element = { top: position.top, bottom: position.bottom, class: blockClass };\r\n\r\n        return element;\r\n    }\r\n\r\n    render() {\r\n\r\n        const { className, children, style } = { ...this.props };\r\n\r\n        return (\r\n            <div className={\"clippath-wrapper \" + className} ref={this.wrapperRef} style={style}>\r\n                <div className=\"clippath-origin\" style={{ ...this.state.style, overflow: 'hidden', transform: \"translateY(\" + this.state.originOuter + \"%)\" }}>\r\n                    <div className=\"clippath-inner\" style={{ ...this.state.style, overflow: 'auto', transform: \"translateY(\" + - this.state.originOuter + \"%)\" }}>\r\n                        <div>{children}</div>\r\n                    </div>\r\n                </div>\r\n                <div className={\"clippath-clone \" + this.state.blockClass} style={{ ...this.state.style, overflow: 'hidden', transform: \"translateY(\" + this.state.cloneOuter + \"%)\" }}>\r\n                    <div className=\"clippath-inner\" style={{ ...this.state.style, overflow: 'auto', transform: \"translateY(\" + - this.state.cloneOuter + \"%)\" }}>\r\n                        <div>{children}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst App = () => (\r\n    <div>\r\n        <ScrollCollision className=\"Elem1\">Scroll Down</ScrollCollision>\r\n        <ScrollCollision className=\"Elem2\"><a target=\"_blank\" rel=\"noopener\" href=\"https://github.com/Vince0382/react-scroll-collision\">Click to see the project on GitHUB</a></ScrollCollision>\r\n        <ScrollCollision className=\"Elem3\">Scroll Down</ScrollCollision>\r\n        <ScrollCollision className=\"ElemSVG\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\">\r\n                <g>\r\n                    <path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\" />\r\n                    <circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\" />\r\n                    <path d=\"M520.5 78.1z\" />\r\n                </g>\r\n            </svg>\r\n        </ScrollCollision>\r\n        <ScrollCollision className=\"Elem4\"><a target=\"_blank\" rel=\"noopener\" href=\"https://www.npmjs.com/package/react-scroll-collision\">Get the package from npm</a></ScrollCollision>\r\n        <div className=\"Block-White\">\r\n\r\n        </div>\r\n        <div className=\"Block-Black\" data-clippath=\"ColorWhite\">\r\n\r\n        </div>\r\n        <div className=\"Block-White\">\r\n\r\n        </div>\r\n        <div className=\"Block-Black\" data-clippath=\"ColorPink\">\r\n\r\n        </div>\r\n\r\n        <div className=\"Block-White\">\r\n\r\n        </div>\r\n        <style global jsx>{`\r\n            \r\n            .Block-White,\r\n            .Block-Black {\r\n              width: 100%;\r\n              height: 50vh;\r\n            }\r\n            \r\n            .Block-White {\r\n              background: white;\r\n            }\r\n            \r\n            .Block-Black {\r\n              background: black;\r\n            }\r\n            \r\n            .ColorWhite{\r\n              color: white;\r\n              fill: white;\r\n            }\r\n            \r\n            .ColorGray{\r\n              color: lightgray;\r\n              fill:gray;\r\n            }\r\n            \r\n            .Elem1 {\r\n              position: fixed;\r\n              top: 25%;\r\n              left: 10%;\r\n              height: 20px;\r\n              width: 300px;\r\n            }\r\n            \r\n            .Elem2 {\r\n              position: fixed;\r\n              top: 5%;\r\n              left: 50%;\r\n              transform: translateX(-50%);\r\n              height: 17px;\r\n              width: 150px;\r\n            }\r\n            \r\n            .Elem3 {\r\n              position: fixed;\r\n              top: 25%;\r\n              right: 10%;\r\n              height: 20px;\r\n              width: 150px;\r\n            }\r\n            \r\n            .ElemSVG {\r\n              position: fixed;\r\n              top: 30%;\r\n              left: 50%;\r\n              transform: translateX(-50%);\r\n              height: 100px;\r\n              width: 100px;\r\n            }\r\n                    `}\r\n        </style>\r\n    </div>\r\n);\r\n\r\n\r\nexport default App"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAbA;AACA;AANA;AA0BA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAHA;AACA;AAKA;AACA;AACA;AArCA;AAuCA;AACA;AACA;AAzCA;AA4CA;AACA;AACA;AA9CA;AA+CA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AAEA;AACA;AAxEA;AA0EA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AAEA;AAFA;AAIA;AACA;AACA;AAvFA;AAyFA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AAnGA;AAoGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAxGA;AAyGA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAhHA;AAkHA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAtHA;AAFA;AAGA;AACA;;;AAqHA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA5IA;AACA;AA4IA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA3BA;AAAA;AAAA;AADA;AACA;AA+FA;;;;A","sourceRoot":""}