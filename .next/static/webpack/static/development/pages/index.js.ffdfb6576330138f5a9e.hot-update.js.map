{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.ffdfb6576330138f5a9e.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import Link from 'next/link'\r\nimport theme from '../components/theme'\r\nimport React, { useState, useRef, useEffect, forwardRef, useLayoutEffect } from 'react'\r\nimport { useScrollPosition } from '../components/useScrollPosition'\r\n\r\nconst TestElement = ({ title, content, backgroundColor, callback }) => {\r\n\r\n    const elementRef = useRef()\r\n    useScrollPosition(({ currPos }) => {\r\n        const ratio = currPos.y / 80 * 100\r\n        if (ratio >= 0 && ratio <= 100) {\r\n            console.log(title)\r\n            callback(backgroundColor, ratio)\r\n        }\r\n\r\n    }, [], elementRef)\r\n\r\n    return (\r\n\r\n        <div ref={elementRef} style={{ ...styles.element, backgroundColor, }}>\r\n\r\n            <p style={{ flex: 1 }}>{title}</p>\r\n            <p style={{ flex: 1 }}>{content}</p>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nconst Index = (props) => {\r\n    const { texts } = props\r\n    const [backgroundState, setBackgroundState] = useState({\r\n        lastColor: theme.COLORS.BG1,\r\n        currentColor: theme.COLORS.BG1,\r\n        amount: \"100%\",\r\n    })\r\n    \r\n    useScrollPosition(({prevPos, currPos}) => {\r\n        // console.log(`${prevPos.y}->${currPos.y}`)\r\n        const isDown = prevPos.y - currPos.y > 0\r\n        console.log(isDown)\r\n    })\r\n\r\n\r\n\r\n    const changeBackgroundColor = (bgcolor, amount) => {\r\n        console.log(`${bgcolor}, ${amount}`)\r\n        const {currentColor, lastColor} = backgroundState\r\n        setBackgroundState({\r\n            lastColor: currentColor,\r\n            currentColor: bgcolor,\r\n            amount,\r\n        })\r\n    }\r\n\r\n    \r\n\r\n\r\n    const {currentColor, lastColor, amount} = backgroundState\r\n    const background = `linear-gradient(${lastColor} ${amount}%,${lastColor} 0%,${currentColor} 0%, ${currentColor} ${100 - amount}%)`\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <Header background={background} amount={amount} />\r\n            {texts.map((text, index) => <TestElement key={index} {...text} callback={changeBackgroundColor} />)}\r\n            <style global jsx>{`\r\n            body {\r\n                margin: 0;\r\n                padding: 0;\r\n                background-color: black;\r\n            }\r\n\r\n            `}</style>\r\n        </div>\r\n    )\r\n}\r\nconst Header = ({ background, amount }) => {\r\n\r\n    return (\r\n        <header style={{ ...styles.header, background }}>\r\n            <h1 style={{margin: 0}}>SELab</h1>\r\n            <p>This is SELAB's main page</p>\r\n            <style jsx>{`\r\n                p{\r\n                    background: linear-gradient( #000 ${100-amount}%,#000 0%,#fff 0%,#fff ${amount}%);\r\n                    -webkit-background-clip: text;\r\n                    -webkit-text-fill-color: transparent;\r\n                    whites-space: nowrap;\r\n                    \r\n               }\r\n            `}\r\n            </style>\r\n        </header>\r\n    )\r\n}\r\n\r\nconst styles = {\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: theme.COLORS.BG1,\r\n        ...theme.FONTS,\r\n        color: \"white\",\r\n        margin: 0,\r\n        padding: 0,\r\n    },\r\n    element: {\r\n        flex: 1,\r\n        height: '50vh',\r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n        textAlign: \"center\",\r\n        paddingTop: '10vh',\r\n    },\r\n    header: {\r\n        position: '-webkit-sticky',\r\n        position: 'sticky',\r\n        top: 0,\r\n        width: \"100%\",\r\n        background: 'linear-gradient( #FFC0CB 50%, #00FFFF 50%)',\r\n        marginTop: 0,\r\n\r\n    }\r\n}\r\n\r\nIndex.getInitialProps = async ({ req }) => {\r\n    const userAgent = req ? req.headers['user-agent'] : navigator.userAgent\r\n    console.log(userAgent)\r\n    const texts = [\r\n        { title: \"This is Test1\", content: \"Hello World!\", backgroundColor: theme.COLORS.BG1 },\r\n        { title: \"This is Test2\", content: \"Hello World!\", backgroundColor: theme.COLORS.BG2 },\r\n        { title: \"This is Test3\", content: \"Hello World!\", backgroundColor: theme.COLORS.BG1 },\r\n        { title: \"This is Test4\", content: \"Hello World!\", backgroundColor: theme.COLORS.BG2 },\r\n        { title: \"This is Test5\", content: \"Hello World!\", backgroundColor: theme.COLORS.BG1 },\r\n        { title: \"This is Test1\", content: \"Hello World!\", backgroundColor: theme.COLORS.BG1 },\r\n        { title: \"This is Test2\", content: \"Hello World!\", backgroundColor: theme.COLORS.BG2 },\r\n        { title: \"This is Test3\", content: \"Hello World!\", backgroundColor: theme.COLORS.BG1 },\r\n        { title: \"This is Test4\", content: \"Hello World!\", backgroundColor: theme.COLORS.BG2 },\r\n        { title: \"This is Test5\", content: \"Hello World!\", backgroundColor: theme.COLORS.BG1 },\r\n    ]\r\n    return { texts }\r\n}\r\n\r\nexport default Index"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AACA;AAHA;AAFA;AAAA;AACA;AAOA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AADA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAzBA;AAAA;AAAA;AA8BA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAaA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AADA;AAjBA;AACA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAbA;AAeA;AAAA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAiBA;;;;A","sourceRoot":""}